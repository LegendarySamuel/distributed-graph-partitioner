#!/bin/bash 
. "$script_pwd/../systems/generic"

# i10*: runs the experiment through `exclusive`

GenerateJobfileHeader() {
    local -n args=$1

    echo "export I_MPI_ASYNC_PROGRESS=1"
    echo "export I_MPI_ASYNC_PROGRESS_THREADS=1"
    if [[ "${args[timelimit]}" != "0" ]]; then
        echo "export I_MPI_JOB_TIMEOUT=${args[timelimit]}"
    fi
}

GenerateJobfileEntry() {
    local -n args=$1

    if (( ${args[num_nodes]} > 1 )); then
        >&2 echo "Error: generic systems do not support multi-node execution"
        exit 1
    fi

    if [[ "${args[print_wrapper]}" == "1" ]]; then
        >&2 echo -e "Wrapping calls with ${args[mpi]} for algorithm '$ALGO_COLOR${args[algorithm]}$NO_COLOR', $ARGS_COLOR${args[num_nodes]}x${args[num_mpis]}x${args[num_threads]}$NO_COLOR:"
    fi

    case "${args[mpi]}" in 
        taskset)
            if [[ "${args[print_wrapper]}" == "1" ]]; then
                >&2 echo -e "  - taskset -c 0-$ARGS_COLOR$(( ${args[num_threads]} - 1 ))$NO_COLOR <call>"
            fi
            echo "taskset -c 0-$(( ${args[num_threads]} - 1 )) ${args[exe]}"
            ;;
        none)
            if [[ "${args[print_wrapper]}" == "1" ]]; then
                >&2 echo "  - <call>"
            fi
            echo "${args[exe]}"
            ;;
        IMPI)
            echo "mpiexec -n $((args[num_nodes]*args[num_mpis])) --perhost ${args[num_mpis]} ${args[exe]}"
            ;;
        *)
            >&2 echo "Error: unsupported MPI ${args[mpi]}"
            exit 1
    esac

    if [[ "${args[print_wrapper]}" == "1" ]]; then
        >&2 echo ""
    fi
}

GenerateJobfileSubmission() {
    for file in ${@}; do 
        echo "bash $file" >> "$submit_impl_filename"
    done
}

GenerateJobfileWrapper() {
    >&2 echo -e "Running experiment using ${ARGS_COLOR}exclusive$NO_COLOR"
    >&2 echo ""

    echo "nohup exclusive bash -- $submit_impl_filename &"
    echo "disown"
}
