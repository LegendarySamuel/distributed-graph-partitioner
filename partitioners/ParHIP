#!/bin/bash
. "$script_pwd/../partitioners/_KaGenPartitioner"

InstallDiskDriver() {
    local -n args=$1

    src_dir="$PREFIX/src/${args[algorithm_version]}/ParHIP"

    if [[ ! -d "$src_dir" ]]; then 
        git clone git@github.com:KaHIP/KaHIP.git "$src_dir"
    else 
        git -C "$src_dir" pull
    fi

    branch="master"
    if [[ "${args[algorithm_version]}" != "latest" ]]; then 
        branch="$version"
    fi
    git -C "$src_dir" reset --hard "origin/$branch"

    current_pwd="$PWD"
    cd "$src_dir"
    CMAKE_GENERATOR="Unix Makefiles" ./compile_withcmake.sh
    cd "$current_pwd"

    cp "$src_dir/deploy/parhip" "${args[binary_disk]}"
}

InstallKaGenDriver() {
    local -n args=$1

    src_dir="$PREFIX/src/KaGen-Partitioner"
    if [[ ! -d "$src_dir" ]]; then
        git clone git@github.com:KaHIP/KaGen-Partitioner.git "$src_dir"
    else 
        git -C "$src_dir" pull 
    fi
        
    cmake -S "$src_dir" -B "$src_dir/build" -DCMAKE_BUILD_TYPE=Release -DBUILD_PARHIP=On $CUSTOM_CMAKE_FLAGS ${args[build_options]}
    cmake --build "$src_dir/build" --parallel
    cp "$src_dir/build/ParHIP" "${args[binary_kagen]}"
}

Install() {
    local -n install_args=$1
    
    if (( ${install_args[install_disk]} )); then 
        InstallDiskDriver install_args
    fi
    if (( ${install_args[install_kagen]} )); then 
        InstallKaGenDriver install_args
    fi
}

InvokeFromDisk() {
    local -n args=$1
    
    graph="${args[graph]}"
    [[ -f "$graph.bgf" ]] && graph="$graph.bgf"
    [[ -f "$graph.graph" ]] && graph="$graph.graph"
    [[ -f "$graph.metis" ]] && graph="$graph.metis"
    imbalance=$(echo "100*$epsilon/1" | bc)

    if [[ -f "$graph" ]]; then
        echo "${args[binary]} --k ${args[k]} --imbalance=$imbalance --seed=${args[seed]} $graph ${args[algorithm_arguments]}"
    else 
        >&2 echo "Warning: Graph $graph does not exist"
        return 1
    fi
}

